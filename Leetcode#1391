class Solution {
    public:
        bool hasValidPath(vector<vector<int>>& grid) {
            int n=grid[0].size();
            int m=grid.size();
            vector<vector<bool>> visited(m,vector<bool>(n,false));
            return dfs(grid,visited,0,0,m,n);
        }
        private: 
        bool connectback(int Direct, int street){
            switch(street){
                case 1: return Direct==2||Direct==3;
                case 2: return Direct==0||Direct==1;
                case 3: return Direct==2||Direct==1;
                case 4: return Direct==3||Direct==1;
                case 5: return Direct==2||Direct==0;
                case 6: return Direct==3||Direct==0;
                default: return false;
            }
        }
        bool dfs(vector<vector<int>>& grid,vector<vector<bool>>& visited,int x,int y,int m,int n){
        if(x<0||y<0||x>=m||y>=n||visited[x][y]) return false;
        if(x==m-1 && y==n-1) return true;
        visited[x][y]=true;
        int type = grid[x][y];  
        switch(type) {
            case 1: if (y > 0 && connectback(3, grid[x][y - 1]) && dfs(grid, visited, x, y - 1, m, n)) return true;
                    if (y + 1 < n && connectback(2, grid[x][y + 1]) && dfs(grid, visited, x, y + 1, m, n)) return true;
                    break;
            case 2:  if (x > 0 && connectback(1, grid[x - 1][y]) && dfs(grid, visited, x - 1, y, m, n)) return true;
                     if (x + 1 < m && connectback(0, grid[x + 1][y]) && dfs(grid, visited, x + 1, y, m, n)) return true;
                    break;
                case 3:  if (y > 0 && connectback(3, grid[x][y - 1]) && dfs(grid, visited, x, y - 1, m, n)) return true;
                         if (x + 1 < m && connectback(0, grid[x + 1][y]) && dfs(grid, visited, x + 1, y, m, n)) return true;
                    break;
                case 4: if (y + 1 < n && connectback(2, grid[x][y + 1]) && dfs(grid, visited, x, y + 1, m, n)) return true;
                        if (x + 1 < m && connectback(0, grid[x + 1][y]) && dfs(grid, visited, x + 1, y, m, n)) return true;
                    break;
                case 5:  if (y > 0 && connectback(3, grid[x][y - 1]) && dfs(grid, visited, x, y - 1, m, n)) return true;
                         if (x > 0 && connectback(1, grid[x - 1][y]) && dfs(grid, visited, x - 1, y, m, n)) return true;
                    break;
                case 6:  if (y + 1 < n && connectback(2, grid[x][y + 1]) && dfs(grid, visited, x, y + 1, m, n)) return true;
                         if (x > 0 && connectback(1, grid[x - 1][y]) && dfs(grid, visited, x - 1, y, m, n)) return true;
                    break;
        }
        return false;
        }
    };
